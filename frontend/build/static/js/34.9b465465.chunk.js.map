{"version":3,"sources":["api/adminApi.js","api/lineStatusApi.js","api/dashboardApi.js","app/admin/uploadfile.js"],"names":["baseurl","AdminApi","getLineData","axios","getUserRole","getShift","GetShutDownDetails","GetShutDownReason","getUserList","getManagealert","getFileCategoryList","addUser","data","console","log","fetch","method","headers","body","JSON","stringify","SaveCalendar","UploadFile","get","post","UploadFile1","header","saveMachine","updateMachine","getAllMachine","getFaultList","getFaultList1","addFault","updateFault","lineStatusApi","getBreakDownDetail","linecode","getPreviousBreakDownDetail","getExcelExportBreakDownDetail","getShiftWiseBreakDownDetail","getOfficerCommentOnBreakdown","dasboardApi","getShiftData","getBlock","getCurrentLineStatus","getChartData","getPieChartData","getGridData","getLineBreakageTimmings","getLabelsData","getOEETrendData","getComplainData","getLineDetails","UloadFile","useState","filetype","setFileType","filecategory","setFileCategoryData","comment","setComment","filename","filesize","inputFileType","selectedFile","setSelectedFile","fileContent","useCallback","then","res","useEffect","className","onChange","label","handlefile","value","options","map","ele","FileCategoryKey","FileCategoryValue","Control","placeholder","type","id","multiple","accept","e","target","files","handlesFileChange","aria-label","aria-describedby","handlescomment","onClick","formData","FormData","append","OnuploadClick"],"mappings":"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","file":"static/js/34.9b465465.chunk.js","sourcesContent":["import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/admin'\r\n\r\n\r\nconst AdminApi = {\r\n  getLineData:function()\r\n  {\r\n      return  axios({\r\n          \"method\": \"GET\",\r\n          \"url\": `${baseurl}/linedata`,\r\n          \"headers\": {\r\n            \"content-type\": \"application/json\",\r\n            \r\n          }\r\n        })\r\n  },\r\n    getUserRole:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/userrole`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getShift:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/shift`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    GetShutDownDetails:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/calendarshutdowndetails`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    GetShutDownReason:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/calendarshutdownreason`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getUserList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/userlist`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getManagealert:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/managealert`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getFileCategoryList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/filecategory`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    addUser : function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/addUser`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n    SaveCalendar : function(data)\r\n    {\r\n   \r\n            console.log(\"SaveCalendar api\",data)\r\n            return fetch(`${baseurl}/savecalendar`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n    // UploadFile : function(data)\r\n    // {\r\n   \r\n    //         console.log(\"getComplaintData api\",data)\r\n    //         return fetch(`${baseurl}/uploadFile`, {\r\n    //             method: \"POST\",\r\n    //             headers: {\r\n    //               \"content-type\": \"application/json\",\r\n                  \r\n    //             },\r\n    //             body: JSON.stringify(data),\r\n    //           })\r\n         \r\n    // },\r\n\r\n    UploadFile : function(data)\r\n    {\r\n   \r\n            console.log(\"UploadFile api\",data.get(\"Comment\"))\r\n            return axios.post(`${baseurl}/uploadFile`,data,{\r\n                headers: {\r\n                  \"content-type\": \"multipart/form-data\",\r\n                  \r\n                },\r\n               \r\n              })\r\n         \r\n    },\r\n\r\n    UploadFile1 : function(data)\r\n    {\r\n   \r\n            console.log(\"UploadFile api\",data)\r\n            return fetch(`${baseurl}/uploadFile1`, {\r\n                method: \"POST\",\r\n             \r\n                header:{\r\n                  \"Content-Type\":\"multipart/form-data\"\r\n                },\r\n                body: data,\r\n               \r\n              }\r\n              )\r\n         \r\n    },\r\n\r\n    saveMachine : function(data)\r\n    {\r\n   \r\n            console.log(\"saveMachine api\",data)\r\n            return fetch(`${baseurl}/saveMachine`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    updateMachine : function(data)\r\n    {\r\n   \r\n            console.log(\"updateMachine api\",data)\r\n            return fetch(`${baseurl}/updateMachine`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n  \r\n    getAllMachine:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/allMachine`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n\r\n    getFaultList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/faultlist`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getFaultList1: function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/faultlist`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    addFault: function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/addFault`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    updateFault: function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/updateFault`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    getAllMachine:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/allMachine`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getMachineData:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/machinedata`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n   \r\n\r\n    updateAlert: function(data)\r\n    {\r\n   \r\n            console.log(\"updateAlert api\",data)\r\n            return fetch(`${baseurl}/updatealert`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n    \r\n    getAlertDetail: function(data)\r\n    {\r\n   \r\n            console.log(\"getAlertDetail api\",data)\r\n            return fetch(`${baseurl}/getalertdetail`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    // getLineType : function()\r\n    // {\r\n   \r\n          \r\n    //         return fetch(`${baseurl}/linetype`, {\r\n    //             method: \"POST\",\r\n    //             headers: {\r\n    //               \"content-type\": \"application/json\",\r\n                  \r\n    //             },\r\n               \r\n    //           })\r\n         \r\n    // },\r\n    \r\n}\r\n\r\n\r\n\r\nexport default AdminApi","import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/linestatus'\r\n\r\n\r\nconst lineStatusApi = {\r\n\r\n    getBreakDownDetail: function(linecode) {\r\n        console.log(\"linecode\",linecode)\r\n        return fetch(`${baseurl}/breakdowndetail`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            },\r\n            body: JSON.stringify(linecode),\r\n          })\r\n    },\r\n\r\n    getPreviousBreakDownDetail: function(data) {\r\n      console.log(\"data in api\",data)\r\n      return fetch(`${baseurl}/previousbreakdowndetail`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            \r\n          },\r\n          body: JSON.stringify(data),\r\n        })\r\n  },\r\n  getExcelExportBreakDownDetail: function(data) {\r\n    console.log(\"data in api\",data)\r\n    return fetch(`${baseurl}/excelexportbreakdowndetail`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n},\r\ngetShiftWiseBreakDownDetail: function(data) {\r\n  console.log(\"data in api\",data)\r\n  return fetch(`${baseurl}/shiftwisebreakdowndetail`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n},\r\ngetOfficerCommentOnBreakdown: function(data) {\r\n\r\n  console.log(\"data in api\",data)\r\n  return fetch(`${baseurl}/officercomment`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n},\r\n}\r\n\r\nexport default lineStatusApi","import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/dashboard'\r\n\r\nconst dasboardApi = {\r\n    getLineData:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/linedata`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n\r\n    getShiftData:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/shiftdata`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n\r\n    getBlock:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/block`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n\r\n    getCurrentLineStatus:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/currentlinestatus`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n    getChartData:function(data)\r\n    \r\n    {  \r\n      \r\n    return fetch(`${baseurl}/chartdata`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n           \r\n        // return axios({\r\n        //   \"method\":\"GET\",\r\n        //   \"url\": `${baseurl}/chartdata`,\r\n        //   \"headers\": {\r\n        //     \"content-type\":\"application/json\",\r\n        //   },\r\n        //   body: JSON.stringify(data),\r\n        // })\r\n    },\r\n    getPieChartData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/piechartdata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getGridData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/griddata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getLineBreakageTimmings:function(data)\r\n    {\r\n      return fetch(`${baseurl}/linebreakagetimmings`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getLabelsData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/labeldata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getOEETrendData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/oeetrenddata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getComplainData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/complaindata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n\r\n    getLineDetails:function(data)\r\n    {\r\n      return fetch(`${baseurl}/linedetails`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n}\r\n\r\nexport default dasboardApi","\r\nimport React, { Component, useCallback, useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Table } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport dasboardApi from \"../../api/dashboardApi\"\r\nimport lineStatusApi from \"../../api/lineStatusApi\"\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport AdminApi from \"../../api/adminApi\";\r\nimport base64 from 'base-64'\r\nimport axios from \"axios\";\r\n\r\n\r\nconst UloadFile = () =>{\r\n  \r\n  const[filetype,setFileType] = useState({})\r\n  const[filecategory,setFileCategoryData] = useState([])\r\n  const[file,setFile] = useState()\r\n  const[comment,setComment] = useState([])\r\n  const[filename,setFileName] = useState()\r\n  const[filesize,setFileSize] = useState()\r\n  const[inputFileType,setInputFileType] = useState()\r\n\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  \r\n\r\n    \r\n    const[fileContent,setFileContent] = useState()\r\n\r\n\r\n  const getFileCategoryList = useCallback(()=>{\r\n    AdminApi.getFileCategoryList()\r\n    .then((res)=>{\r\n      console.log(\"getFileCategoryList\",res.data)\r\n      setFileCategoryData(res.data)\r\n    })\r\n  })\r\n\r\n  const handlefile = (label) =>{\r\n   \r\n    console.log(\"value\",label)\r\n    setFileType(label.label)\r\n\r\n   \r\n  }\r\n\r\n\r\n  const handlesFileChange = (e)=>{\r\n    console.log(\"handlesFileChange\",e.target.files[0])\r\n    setSelectedFile(e.target.files[0])\r\n\r\n     \r\n\r\n\r\n  \r\n }\r\n\r\n  const handlescomment = (e)=>{\r\n    setComment(e.target.value)\r\n  }\r\n\r\n const OnuploadClick = (e) =>{\r\n  const formData = new FormData()\r\n  formData.append('uloadFile',selectedFile)\r\n  formData.append('Comment',comment)\r\n  formData.append('FileType',filetype)\r\n    // axios.post(\"http://localhost:5000/anzo/admin/uploadFile\", formData ,{\r\n    //   headers: {\r\n    //     'Content-Type' : 'multipart/form-data'\r\n    //   }\r\n\r\n     \r\n    // })\r\n   \r\n    AdminApi.UploadFile(formData)\r\n    \r\n    .then((res) => {\r\n     \r\n        console.log(\"UploadFile\",res)\r\n        //setFile(data[0].FileContent.data)\r\n      \r\n          })\r\n   \r\n    \r\n   \r\n }\r\n\r\n \r\n \r\n  \r\n  useEffect(() =>{\r\n   \r\n    getFileCategoryList()\r\n\r\n  },[]\r\n  )\r\nconsole.log(\"filetype\",filetype)\r\nconsole.log(\"filename\",filename)\r\nconsole.log(\"filesize\",filesize)\r\nconsole.log(\"inputfiletype\",inputFileType)\r\nconsole.log(\"fileContent\",fileContent)\r\nconsole.log(\"comment\",comment)\r\n    return(\r\n        <div className=\"Upload\">\r\n         \r\n     \r\n       \r\n        <div className=\"card card-Upload-one\">\r\n        <div className=\"card-header\">\r\n            <h7>Upload</h7>\r\n        \r\n    \r\n                  \r\n                  </div>\r\n                \r\n               \r\n                <div className=\"card-body\">\r\n                    <h4>Upload Document</h4>\r\n                 <div className=\"card card-Upload-child\">\r\n                   \r\n                    <div className=\"card-body\">\r\n                       \r\n                    <div className=\"select-1\">\r\n                      <p1>Select Line:</p1>\r\n                     <div className=\"select-line\">\r\n                     <Select\r\n                        onChange={(label) => handlefile(label)}\r\n                        value={filecategory.value}\r\n                        options={[\r\n                          ...filecategory.map((ele) => {\r\n                           \r\n                             return {\r\n                               value: ele.FileCategoryKey,\r\n                               label: ele.FileCategoryValue,\r\n                             };\r\n                           }),\r\n                        ]}\r\n                      />\r\n                   </div>\r\n                      \r\n                    </div>\r\n                  \r\n                    <div className=\"select-2\">\r\n                      <p>File Path:</p>\r\n                      <div className=\"select-start\">\r\n                      <InputGroup className=\"mb-3\">\r\n        {/* <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text> */}\r\n        <Form.Control\r\n          placeholder=\"file\"\r\n          type=\"file\"\r\n         // value = {inputFileType}\r\n          id = \"file1\"\r\n          multiple={true}\r\n          accept=\".xlsx,.xls,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n         onChange={(e) => handlesFileChange(e)}\r\n          aria-label=\"Username\"\r\n          aria-describedby=\"basic-addon1\"\r\n        />\r\n      </InputGroup>\r\n                      </div>\r\n                     \r\n                    </div>\r\n                   \r\n                    <div className=\"select-3\">\r\n                      <p>Description:</p>\r\n                      <div className=\"select-end\">\r\n                      <InputGroup className=\"mb-3\">\r\n        {/* <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text> */}\r\n        <Form.Control\r\n          placeholder=\"Comment\"\r\n          onChange={(e) => handlescomment(e)}\r\n          aria-label=\"Username\"\r\n          aria-describedby=\"basic-addon1\"\r\n        />\r\n      </InputGroup>\r\n                      </div>\r\n                      \r\n                    </div>\r\n                  \r\n\r\n                    <button className=\"buttonbreakdown\"\r\n                       onClick={(e) => {\r\n                        OnuploadClick()\r\n                      }}\r\n                    >\r\n                        Upload File\r\n                      \r\n                    </button>\r\n                  \r\n                    </div>\r\n                    </div>\r\n\r\n                 \r\n                 \r\n\r\n                  \r\n                </div>\r\n                <div className=\"breakdownReportTable\">\r\n                {/* <Table bordered className=\"mg-b-0\" id=\"table-to-xls\">\r\n               \r\n               <thead>\r\n                 <tr>\r\n                 <th>ID</th>\r\n                 <th>LineCode</th>\r\n                   <th>MachineUpTime</th>\r\n                   <th>MachineDownTime</th>\r\n                   <th>DownPeriod</th>\r\n                   <th>Process</th>\r\n                   <th>Reason</th>\r\n                   <th>Comment</th>\r\n                   <th>Officer Comment</th>\r\n                   <th>UserName</th>\r\n                   <th>InputTime</th>\r\n                   \r\n                  \r\n                   \r\n                   \r\n                 </tr>\r\n               </thead>\r\n               <tbody>\r\n\r\n               {excelexoprtData.map((item) => (\r\n                <tr key={item._id}>\r\n              <td>{item.Id}</td>\r\n              <td>{item.LineCode}</td>\r\n              <td>{item.MachineUpTime}</td>\r\n              <td>{item.MachineDownTime}</td>\r\n              <td>{item.DownPeriod}</td>\r\n              <td>{item.Process}</td>\r\n              <td>{item.Reason}</td>\r\n              <td>{item.Comments}</td>\r\n              <td>{item.OfficerComment}</td>\r\n              \r\n              <td>{item.UserName}</td>\r\n              <td>{item.InputTime}</td>\r\n             \r\n\r\n              \r\n              \r\n             \r\n             \r\n            </tr>\r\n          ))}\r\n               \r\n               \r\n               \r\n               \r\n                \r\n                \r\n                \r\n               </tbody>\r\n             </Table> */}\r\n                </div>\r\n                \r\n                {/* card-body */}\r\n              </div>\r\n    </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default UloadFile"],"sourceRoot":""}