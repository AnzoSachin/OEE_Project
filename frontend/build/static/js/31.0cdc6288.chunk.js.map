{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","api/adminApi.js","api/dashboardApi.js","../node_modules/react-bootstrap/esm/InputGroup.js","app/admin/machinemanagement.js"],"names":["Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","baseurl","AdminApi","getLineData","axios","getUserRole","getShift","GetShutDownDetails","GetShutDownReason","getUserList","getManagealert","getFileCategoryList","addUser","data","console","log","fetch","method","headers","body","JSON","stringify","SaveCalendar","UploadFile","get","post","UploadFile1","header","saveMachine","updateMachine","getAllMachine","getFaultList","getFaultList1","addFault","updateFault","dasboardApi","getShiftData","getBlock","getCurrentLineStatus","getChartData","getPieChartData","getGridData","getLineBreakageTimmings","getLabelsData","getOEETrendData","getComplainData","getLineDetails","InputGroup","_ref$as","as","Component","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","MachineManagement","useState","linedata","setLineData","allmachine","setAllMachine","line","setLine","machineprocess","setMachineProcess","isactive","setIsActive","useCallback","then","res","recordset","save","Isactive","action","toast","info","update","useEffect","position","autoClose","hideProgressBar","newestOnTop","theme","onChange","value","handleline","options","map","ele","LineCode","label","LineName","Control","placeholder","e","target","handleMachineProcess","aria-label","aria-describedby","key","Check","inline","name","id","onClick","item","_id","Id","MachineName","IsActive","machinename","pre"],"mappings":"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","file":"static/js/31.0cdc6288.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nvar Table = React.forwardRef(function (_ref, ref) {\r\n  var bsPrefix = _ref.bsPrefix,\r\n      className = _ref.className,\r\n      striped = _ref.striped,\r\n      bordered = _ref.bordered,\r\n      borderless = _ref.borderless,\r\n      hover = _ref.hover,\r\n      size = _ref.size,\r\n      variant = _ref.variant,\r\n      responsive = _ref.responsive,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\r\n\r\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\r\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\r\n  var table = React.createElement(\"table\", _extends({}, props, {\r\n    className: classes,\r\n    ref: ref\r\n  }));\r\n\r\n  if (responsive) {\r\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\r\n\r\n    if (typeof responsive === 'string') {\r\n      responsiveClass = responsiveClass + \"-\" + responsive;\r\n    }\r\n\r\n    return React.createElement(\"div\", {\r\n      className: responsiveClass\r\n    }, table);\r\n  }\r\n\r\n  return table;\r\n});\r\nexport default Table;","import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/admin'\r\n\r\n\r\nconst AdminApi = {\r\n  getLineData:function()\r\n  {\r\n      return  axios({\r\n          \"method\": \"GET\",\r\n          \"url\": `${baseurl}/linedata`,\r\n          \"headers\": {\r\n            \"content-type\": \"application/json\",\r\n            \r\n          }\r\n        })\r\n  },\r\n    getUserRole:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/userrole`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getShift:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/shift`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    GetShutDownDetails:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/calendarshutdowndetails`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    GetShutDownReason:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/calendarshutdownreason`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getUserList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/userlist`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getManagealert:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/managealert`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getFileCategoryList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/filecategory`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    addUser : function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/addUser`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n    SaveCalendar : function(data)\r\n    {\r\n   \r\n            console.log(\"SaveCalendar api\",data)\r\n            return fetch(`${baseurl}/savecalendar`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n    // UploadFile : function(data)\r\n    // {\r\n   \r\n    //         console.log(\"getComplaintData api\",data)\r\n    //         return fetch(`${baseurl}/uploadFile`, {\r\n    //             method: \"POST\",\r\n    //             headers: {\r\n    //               \"content-type\": \"application/json\",\r\n                  \r\n    //             },\r\n    //             body: JSON.stringify(data),\r\n    //           })\r\n         \r\n    // },\r\n\r\n    UploadFile : function(data)\r\n    {\r\n   \r\n            console.log(\"UploadFile api\",data.get(\"Comment\"))\r\n            return axios.post(`${baseurl}/uploadFile`,data,{\r\n                headers: {\r\n                  \"content-type\": \"multipart/form-data\",\r\n                  \r\n                },\r\n               \r\n              })\r\n         \r\n    },\r\n\r\n    UploadFile1 : function(data)\r\n    {\r\n   \r\n            console.log(\"UploadFile api\",data)\r\n            return fetch(`${baseurl}/uploadFile1`, {\r\n                method: \"POST\",\r\n             \r\n                header:{\r\n                  \"Content-Type\":\"multipart/form-data\"\r\n                },\r\n                body: data,\r\n               \r\n              }\r\n              )\r\n         \r\n    },\r\n\r\n    saveMachine : function(data)\r\n    {\r\n   \r\n            console.log(\"saveMachine api\",data)\r\n            return fetch(`${baseurl}/saveMachine`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    updateMachine : function(data)\r\n    {\r\n   \r\n            console.log(\"updateMachine api\",data)\r\n            return fetch(`${baseurl}/updateMachine`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n  \r\n    getAllMachine:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/allMachine`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n\r\n    getFaultList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/faultlist`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getFaultList1: function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/faultlist`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    addFault: function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/addFault`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    updateFault: function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/updateFault`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    getAllMachine:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/allMachine`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getMachineData:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/machinedata`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n   \r\n\r\n    updateAlert: function(data)\r\n    {\r\n   \r\n            console.log(\"updateAlert api\",data)\r\n            return fetch(`${baseurl}/updatealert`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n    \r\n    getAlertDetail: function(data)\r\n    {\r\n   \r\n            console.log(\"getAlertDetail api\",data)\r\n            return fetch(`${baseurl}/getalertdetail`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    // getLineType : function()\r\n    // {\r\n   \r\n          \r\n    //         return fetch(`${baseurl}/linetype`, {\r\n    //             method: \"POST\",\r\n    //             headers: {\r\n    //               \"content-type\": \"application/json\",\r\n                  \r\n    //             },\r\n               \r\n    //           })\r\n         \r\n    // },\r\n    \r\n}\r\n\r\n\r\n\r\nexport default AdminApi","import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/dashboard'\r\n\r\nconst dasboardApi = {\r\n    getLineData:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/linedata`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n\r\n    getShiftData:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/shiftdata`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n\r\n    getBlock:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/block`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n\r\n    getCurrentLineStatus:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/currentlinestatus`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n    getChartData:function(data)\r\n    \r\n    {  \r\n      \r\n    return fetch(`${baseurl}/chartdata`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n           \r\n        // return axios({\r\n        //   \"method\":\"GET\",\r\n        //   \"url\": `${baseurl}/chartdata`,\r\n        //   \"headers\": {\r\n        //     \"content-type\":\"application/json\",\r\n        //   },\r\n        //   body: JSON.stringify(data),\r\n        // })\r\n    },\r\n    getPieChartData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/piechartdata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getGridData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/griddata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getLineBreakageTimmings:function(data)\r\n    {\r\n      return fetch(`${baseurl}/linebreakagetimmings`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getLabelsData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/labeldata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getOEETrendData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/oeetrenddata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getComplainData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/complaindata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n\r\n    getLineDetails:function(data)\r\n    {\r\n      return fetch(`${baseurl}/linedetails`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n}\r\n\r\nexport default dasboardApi","import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport createWithBsPrefix from './createWithBsPrefix';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\n\r\n/**\r\n *\r\n * @property {InputGroupAppend} Append\r\n * @property {InputGroupPrepend} Prepend\r\n * @property {InputGroupText} Text\r\n * @property {InputGroupRadio} Radio\r\n * @property {InputGroupCheckbox} Checkbox\r\n */\r\nvar InputGroup = React.forwardRef(function (_ref, ref) {\r\n  var bsPrefix = _ref.bsPrefix,\r\n      size = _ref.size,\r\n      className = _ref.className,\r\n      _ref$as = _ref.as,\r\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\r\n\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\r\n  return React.createElement(Component, _extends({\r\n    ref: ref\r\n  }, props, {\r\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\r\n  }));\r\n});\r\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\r\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\r\nvar InputGroupText = createWithBsPrefix('input-group-text', {\r\n  Component: 'span'\r\n});\r\n\r\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\r\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\r\n    type: \"checkbox\"\r\n  }, props)));\r\n};\r\n\r\nvar InputGroupRadio = function InputGroupRadio(props) {\r\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\r\n    type: \"radio\"\r\n  }, props)));\r\n};\r\n\r\nInputGroup.displayName = 'InputGroup';\r\nInputGroup.Text = InputGroupText;\r\nInputGroup.Radio = InputGroupRadio;\r\nInputGroup.Checkbox = InputGroupCheckbox;\r\nInputGroup.Append = InputGroupAppend;\r\nInputGroup.Prepend = InputGroupPrepend;\r\nexport default InputGroup;","\r\nimport React, { Component, useCallback, useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Table } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport dasboardApi from \"../../api/dashboardApi\"\r\nimport AdminApi from '../../api/adminApi'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MachineManagement = () =>{\r\n  const[linedata,setLineData] = useState([])\r\n  const[allmachine,setAllMachine] = useState([])\r\n  const[line,setLine] = useState([])\r\n  const[machineprocess,setMachineProcess] = useState([])\r\n  const[isactive,setIsActive] = useState('')\r\n\r\n\r\n  const getLineData = useCallback(()=>{\r\n    dasboardApi.getLineData()\r\n    .then((res)=>{\r\n      console.log(\"getLineData\",res.data)\r\n      setLineData(res.data)\r\n   \r\n    })\r\n  })\r\n  const getAllMachine = useCallback(()=>{\r\n    AdminApi.getAllMachine()\r\n    .then((res)=>{\r\n      console.log(\"getAllMachine\",res.data.recordset)\r\n      setAllMachine(res.data.recordset)\r\n   \r\n    })\r\n  })\r\n\r\n\r\n  const save = useCallback(()=>{\r\n    let Isactive = isactive ? \"Y\" : \"N\"\r\n    let action = \"ADD\"\r\n    AdminApi.saveMachine({line,machineprocess,action,Isactive})\r\n    .then((res)=>{\r\n     \r\n        toast.info('Machine Created')\r\n        getAllMachine()\r\n     \r\n   \r\n    })\r\n  })\r\n\r\n  \r\n  const update = useCallback(()=>{\r\n    let Isactive = isactive ? \"Y\" : \"N\"\r\n    let action = \"UPDATE\"\r\n    AdminApi.updateMachine({line,machineprocess,action,Isactive})\r\n    .then((res)=>{\r\n     \r\n        toast.info('Machine Updated')\r\n        getAllMachine()\r\n     \r\n   \r\n    })\r\n  })\r\n  const handleline = (value) =>{\r\n    setLine(value.value)\r\n  }\r\n\r\n  const handleMachineProcess = (e) =>{\r\n    setMachineProcess(e.target.value)\r\n  }\r\n\r\nconst handleIsActive = (e) =>{\r\n  setIsActive(\"Y\")\r\n}\r\n\r\nconst OnSelect = (machinename)=>{\r\n \r\n  setMachineProcess(pre=>pre=machinename)\r\n}\r\n\r\n  \r\n  useEffect(() =>{\r\n   \r\n    getLineData()\r\n    getAllMachine()\r\n\r\n  },[]\r\n  )\r\n    return(\r\n        <div className=\"batch\">\r\n      <ToastContainer\r\nposition=\"top-right\"\r\nautoClose={5000}\r\nhideProgressBar={false}\r\nnewestOnTop={false}\r\n// closeOnClick\r\n// rtl={false}\r\n// pauseOnFocusLoss\r\n// draggable\r\n// pauseOnHover\r\ntheme=\"light\"\r\n/>\r\n{/* Same as */}\r\n<ToastContainer />\r\n       \r\n        <div className=\"card card-machinemanagement-one\">\r\n        <div className=\"card-header\">\r\n            <h7>Machine/Process</h7>\r\n        \r\n    \r\n                  \r\n                  </div>\r\n                \r\n               \r\n                <div className=\"card-body\">\r\n                    <h4>Add\\Update Machine </h4>\r\n                 <div className=\"card card-machinemanagement-child\">\r\n                    <div className=\"card-header\">\r\n                 \r\n                  \r\n                    <div className=\"line-b-select-3\">\r\n                      <p>Line Type:</p>\r\n                      <div className=\"container-3\">\r\n                      <Select\r\n                       onChange={(value) => handleline(value)}\r\n                       value={linedata.value}\r\n                        options={[\r\n                          ...linedata.map((ele) => {\r\n                            return {\r\n                              value: ele.LineCode,\r\n                              label: ele.LineName,\r\n                            };\r\n                          }),\r\n                        ]}\r\n                      />\r\n                      </div>\r\n                      \r\n                    </div>\r\n                   \r\n\r\n                      \r\n                      \r\n\r\n                      <div className=\"line-b-select-7\">\r\n                      <p className=\"\">Machine/Process:</p>\r\n                      <div className=\"container-7\">\r\n                      <InputGroup className=\"mb-3\">\r\n       \r\n                      <Form.Control\r\n                       placeholder=\"\"\r\n                       value={machineprocess}\r\n                       onChange={(e) => handleMachineProcess(e)}\r\n                         aria-label=\"\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                          />\r\n                       </InputGroup>\r\n                      </div>\r\n                      </div>\r\n\r\n                      <div className=\"line-b-select-8\">\r\n                      \r\n                      <div className=\"container-8\">\r\n                      <Form>\r\n      {['checkbox'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Check\r\n            inline\r\n            label=\"Is Active\"\r\n            onChange={(e) => handleIsActive(e)}\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n         \r\n         \r\n        </div>\r\n      ))}\r\n    </Form>\r\n                      </div>\r\n                      </div>\r\n\r\n                      \r\n                      \r\n                  \r\n                    <button className=\"classbutton1\"\r\n                      onClick={(e) => {\r\n                        save()\r\n                      }}\r\n                    >\r\n                      Save\r\n                    </button>\r\n\r\n                    <button className=\"classbutton2\"\r\n                      onClick={(e) => {\r\n                      update()\r\n                      }}\r\n                    >\r\n                     Update\r\n                    </button>\r\n\r\n                    <button className=\"classbutton3\"\r\n                      onClick={(e) => {\r\n                       // ()\r\n                      }}\r\n                    >\r\n                   Reset\r\n                    </button>\r\n\r\n                   \r\n\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n                   <Table bordered className=\"mg-b-0\">\r\n               \r\n                <thead>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>Machine Name</th>\r\n                    <th>IsActive</th>\r\n                    <th>update</th>\r\n                 \r\n                   \r\n                   \r\n                    \r\n                    \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                {allmachine.map((item) => (\r\n                <tr key={item._id}>\r\n\r\n\r\n              <td>{item.Id}</td>\r\n              <td>{item.MachineName}</td>\r\n              <td>{item.IsActive}</td>\r\n              <td><button onClick={()=>OnSelect(item.MachineName)}>\r\n                select</button>\r\n                </td>\r\n             \r\n             \r\n             </tr>\r\n          ))}\r\n                 \r\n                 \r\n                \r\n                 \r\n                \r\n                \r\n                \r\n                \r\n                 \r\n                 \r\n                 \r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n                        \r\n                    </div>\r\n\r\n                 </div>\r\n                 \r\n\r\n                  \r\n                </div>\r\n                {/* card-body */}\r\n              </div>\r\n    </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default MachineManagement"],"sourceRoot":""}