{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","api/adminApi.js","api/dashboardApi.js","../node_modules/react-bootstrap/esm/InputGroup.js","app/admin/faultmanagement.js"],"names":["Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","baseurl","AdminApi","getLineData","axios","getUserRole","getShift","GetShutDownDetails","GetShutDownReason","getUserList","getManagealert","getFileCategoryList","addUser","data","console","log","fetch","method","headers","body","JSON","stringify","SaveCalendar","UploadFile","get","post","UploadFile1","header","saveMachine","updateMachine","getAllMachine","getFaultList","getFaultList1","addFault","updateFault","dasboardApi","getShiftData","getBlock","getCurrentLineStatus","getChartData","getPieChartData","getGridData","getLineBreakageTimmings","getLabelsData","getOEETrendData","getComplainData","getLineDetails","InputGroup","_ref$as","as","Component","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","FaultManagement","useState","linedata","setLineData","machinedata","setAllMachine","faultlist","setFaultList","fault","setFault","machineprocess","setMachineProcess","line","setLine","isactive","setIsActive","isplanned","setIsPlanned","planneddowntime","setPlannedDownTime","useCallback","then","res","getMachineData","recordset","getfaultlist","Isactive","action","json","toast","info","Isplanned","useEffect","position","autoClose","hideProgressBar","newestOnTop","theme","onChange","value","handleline","options","map","ele","LineCode","label","LineName","handleMachineProcess","Id","MachineName","Control","placeholder","e","target","handlefault","aria-label","aria-describedby","key","Check","inline","name","id","handleplanneddowntime","onClick","item","_id","Fault","IsPlanned","IsActive","update"],"mappings":"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","file":"static/js/30.1af4a44e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nvar Table = React.forwardRef(function (_ref, ref) {\r\n  var bsPrefix = _ref.bsPrefix,\r\n      className = _ref.className,\r\n      striped = _ref.striped,\r\n      bordered = _ref.bordered,\r\n      borderless = _ref.borderless,\r\n      hover = _ref.hover,\r\n      size = _ref.size,\r\n      variant = _ref.variant,\r\n      responsive = _ref.responsive,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\r\n\r\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\r\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\r\n  var table = React.createElement(\"table\", _extends({}, props, {\r\n    className: classes,\r\n    ref: ref\r\n  }));\r\n\r\n  if (responsive) {\r\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\r\n\r\n    if (typeof responsive === 'string') {\r\n      responsiveClass = responsiveClass + \"-\" + responsive;\r\n    }\r\n\r\n    return React.createElement(\"div\", {\r\n      className: responsiveClass\r\n    }, table);\r\n  }\r\n\r\n  return table;\r\n});\r\nexport default Table;","import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/admin'\r\n\r\n\r\nconst AdminApi = {\r\n  getLineData:function()\r\n  {\r\n      return  axios({\r\n          \"method\": \"GET\",\r\n          \"url\": `${baseurl}/linedata`,\r\n          \"headers\": {\r\n            \"content-type\": \"application/json\",\r\n            \r\n          }\r\n        })\r\n  },\r\n    getUserRole:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/userrole`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getShift:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/shift`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    GetShutDownDetails:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/calendarshutdowndetails`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    GetShutDownReason:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/calendarshutdownreason`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getUserList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/userlist`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getManagealert:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/managealert`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getFileCategoryList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/filecategory`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    addUser : function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/addUser`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n    SaveCalendar : function(data)\r\n    {\r\n   \r\n            console.log(\"SaveCalendar api\",data)\r\n            return fetch(`${baseurl}/savecalendar`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n    // UploadFile : function(data)\r\n    // {\r\n   \r\n    //         console.log(\"getComplaintData api\",data)\r\n    //         return fetch(`${baseurl}/uploadFile`, {\r\n    //             method: \"POST\",\r\n    //             headers: {\r\n    //               \"content-type\": \"application/json\",\r\n                  \r\n    //             },\r\n    //             body: JSON.stringify(data),\r\n    //           })\r\n         \r\n    // },\r\n\r\n    UploadFile : function(data)\r\n    {\r\n   \r\n            console.log(\"UploadFile api\",data.get(\"Comment\"))\r\n            return axios.post(`${baseurl}/uploadFile`,data,{\r\n                headers: {\r\n                  \"content-type\": \"multipart/form-data\",\r\n                  \r\n                },\r\n               \r\n              })\r\n         \r\n    },\r\n\r\n    UploadFile1 : function(data)\r\n    {\r\n   \r\n            console.log(\"UploadFile api\",data)\r\n            return fetch(`${baseurl}/uploadFile1`, {\r\n                method: \"POST\",\r\n             \r\n                header:{\r\n                  \"Content-Type\":\"multipart/form-data\"\r\n                },\r\n                body: data,\r\n               \r\n              }\r\n              )\r\n         \r\n    },\r\n\r\n    saveMachine : function(data)\r\n    {\r\n   \r\n            console.log(\"saveMachine api\",data)\r\n            return fetch(`${baseurl}/saveMachine`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    updateMachine : function(data)\r\n    {\r\n   \r\n            console.log(\"updateMachine api\",data)\r\n            return fetch(`${baseurl}/updateMachine`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n  \r\n    getAllMachine:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/allMachine`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n\r\n    getFaultList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/faultlist`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getFaultList1: function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/faultlist`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    addFault: function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/addFault`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    updateFault: function(data)\r\n    {\r\n   \r\n            console.log(\"getComplaintData api\",data)\r\n            return fetch(`${baseurl}/updateFault`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    getAllMachine:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/allMachine`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getMachineData:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/machinedata`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n   \r\n\r\n    updateAlert: function(data)\r\n    {\r\n   \r\n            console.log(\"updateAlert api\",data)\r\n            return fetch(`${baseurl}/updatealert`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n    \r\n    getAlertDetail: function(data)\r\n    {\r\n   \r\n            console.log(\"getAlertDetail api\",data)\r\n            return fetch(`${baseurl}/getalertdetail`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"content-type\": \"application/json\",\r\n                  \r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n         \r\n    },\r\n\r\n    // getLineType : function()\r\n    // {\r\n   \r\n          \r\n    //         return fetch(`${baseurl}/linetype`, {\r\n    //             method: \"POST\",\r\n    //             headers: {\r\n    //               \"content-type\": \"application/json\",\r\n                  \r\n    //             },\r\n               \r\n    //           })\r\n         \r\n    // },\r\n    \r\n}\r\n\r\n\r\n\r\nexport default AdminApi","import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/dashboard'\r\n\r\nconst dasboardApi = {\r\n    getLineData:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/linedata`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n\r\n    getShiftData:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/shiftdata`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n\r\n    getBlock:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/block`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n\r\n    getCurrentLineStatus:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/currentlinestatus`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n    getChartData:function(data)\r\n    \r\n    {  \r\n      \r\n    return fetch(`${baseurl}/chartdata`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n           \r\n        // return axios({\r\n        //   \"method\":\"GET\",\r\n        //   \"url\": `${baseurl}/chartdata`,\r\n        //   \"headers\": {\r\n        //     \"content-type\":\"application/json\",\r\n        //   },\r\n        //   body: JSON.stringify(data),\r\n        // })\r\n    },\r\n    getPieChartData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/piechartdata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getGridData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/griddata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getLineBreakageTimmings:function(data)\r\n    {\r\n      return fetch(`${baseurl}/linebreakagetimmings`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getLabelsData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/labeldata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getOEETrendData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/oeetrenddata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getComplainData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/complaindata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n\r\n    getLineDetails:function(data)\r\n    {\r\n      return fetch(`${baseurl}/linedetails`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n}\r\n\r\nexport default dasboardApi","import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport createWithBsPrefix from './createWithBsPrefix';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\n\r\n/**\r\n *\r\n * @property {InputGroupAppend} Append\r\n * @property {InputGroupPrepend} Prepend\r\n * @property {InputGroupText} Text\r\n * @property {InputGroupRadio} Radio\r\n * @property {InputGroupCheckbox} Checkbox\r\n */\r\nvar InputGroup = React.forwardRef(function (_ref, ref) {\r\n  var bsPrefix = _ref.bsPrefix,\r\n      size = _ref.size,\r\n      className = _ref.className,\r\n      _ref$as = _ref.as,\r\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\r\n\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\r\n  return React.createElement(Component, _extends({\r\n    ref: ref\r\n  }, props, {\r\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\r\n  }));\r\n});\r\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\r\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\r\nvar InputGroupText = createWithBsPrefix('input-group-text', {\r\n  Component: 'span'\r\n});\r\n\r\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\r\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\r\n    type: \"checkbox\"\r\n  }, props)));\r\n};\r\n\r\nvar InputGroupRadio = function InputGroupRadio(props) {\r\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\r\n    type: \"radio\"\r\n  }, props)));\r\n};\r\n\r\nInputGroup.displayName = 'InputGroup';\r\nInputGroup.Text = InputGroupText;\r\nInputGroup.Radio = InputGroupRadio;\r\nInputGroup.Checkbox = InputGroupCheckbox;\r\nInputGroup.Append = InputGroupAppend;\r\nInputGroup.Prepend = InputGroupPrepend;\r\nexport default InputGroup;","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { Component, useCallback, useEffect,useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Table } from 'react-bootstrap';\r\nimport { Form } from \"react-bootstrap\";\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport AdminApi from '../../api/adminApi'\r\nimport dasboardApi from \"../../api/dashboardApi\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nconst FaultManagement = () =>{\r\nconst[linedata,setLineData] = useState([])\r\nconst[machinedata ,setAllMachine] = useState([])\r\nconst[userlist,setUserList] = useState([])\r\nconst[faultlist,setFaultList] = useState([])\r\nconst[fault,setFault] = useState([])\r\nconst[machineprocess,setMachineProcess] = useState([])\r\nconst[line,setLine] = useState('202')\r\nconst[linetype,setLineType] = useState([])\r\nconst[isactive,setIsActive] = useState('')\r\nconst[isplanned,setIsPlanned] = useState('N')\r\nconst[planneddowntime,setPlannedDownTime] = useState('')\r\n \r\nconst getLineData = useCallback(()=>{\r\n  dasboardApi.getLineData()\r\n  .then((res)=>{\r\n    console.log(\"getLineData\",res.data)\r\n    setLineData(res.data)\r\n \r\n  })\r\n})\r\nconst getAllMachine = useCallback(()=>{\r\n  AdminApi.getMachineData()\r\n  .then((res)=>{\r\n    console.log(\"getMachineData\",res.data.recordset)\r\n    setAllMachine(res.data.recordset)\r\n \r\n  })\r\n})\r\n\r\n\r\n\r\n// const getuserlist = useCallback(() =>{\r\n//   AdminApi.getUserList()\r\n//   .then((res)=>{\r\n//     console.log(\"getuserlist\",res.data)\r\n//     setUserList(res.data)\r\n//   })\r\n//     })\r\nconst getfaultlist = useCallback(() =>{\r\n  AdminApi.getFaultList({})\r\n  .then((res)=>{\r\n    console.log(\"getfaultlist\",res.data)\r\n    setFaultList(res.data)\r\n  })\r\n    })\r\n           \r\nconst addFault = useCallback(() => {\r\n  let Isactive = isactive ? \"Y\" : \"N\"\r\n  let action = \"ADD\"\r\n  AdminApi.addFault({line,machineprocess,fault,action,Isactive,isplanned,planneddowntime})\r\n  .then((res) => res.json())\r\n  .then((data) => {\r\n   toast.info('Fault added successfully!');\r\n         console.log(\"addFault\",data)\r\n         getfaultlist()\r\n  })\r\n})\r\n\r\nconst updateFault = useCallback(() => {\r\n  let Isplanned = isplanned ? \"Y\" : \"N\"\r\n  let action = \"UPDATE\"\r\n  AdminApi.updateFault({line,machineprocess,fault,action,isactive,Isplanned,planneddowntime})\r\n  .then((res) => res.json())\r\n  .then((data) => {\r\n   toast.info('Updated successfully!');\r\n         console.log(\"updateFault\",data)\r\n         getfaultlist()\r\n  })\r\n})\r\n\r\nconst handlefault = (e) => {\r\n       setFault(e.target.value)\r\n\r\n}\r\nconst handleline = (value) =>{\r\n  // console.log(\"value===\",value)\r\n setLine(value.value)\r\n\r\n AdminApi.getFaultList1({line})\r\n .then((res) => res.json())\r\n .then((data) => {\r\n       console.log(\"getFaultList\",data)\r\n    \r\n       // setContainerSize(data.recordset)\r\n     \r\n       })\r\n}\r\nconst handleMachineProcess = (value) =>{\r\n  setMachineProcess(value.value)\r\n}\r\n\r\nconst handleIsActive = (e) =>{\r\n  setIsActive(\"Y\" )\r\n}\r\n\r\nconst handleIsPlanned = (e) =>{\r\n  setIsPlanned(\"Y\")\r\n}\r\nconst handleplanneddowntime = (e) => {\r\n       setPlannedDownTime(e.target.value)\r\n}\r\n\r\n\r\n\r\nconst update = (fault) =>{\r\n     \r\n  setFault(fault)\r\n\r\n\r\n  \r\n}\r\nuseEffect(() =>{\r\n   getLineData()\r\n   getAllMachine()\r\n   getfaultlist()\r\n  // getuserlist()\r\n},[]\r\n)\r\n\r\n  return(\r\n    <div className=\"batch\">\r\n\r\n<ToastContainer\r\nposition=\"top-right\"\r\nautoClose={5000}\r\nhideProgressBar={false}\r\nnewestOnTop={false}\r\ntheme=\"light\"\r\n/>\r\n<ToastContainer/>\r\n     <div className=\"card card-faultmanagement-one\">\r\n             <div className=\"card-header\">\r\n                 <h7>Fault Management</h7>\r\n               </div>\r\n                    <div className=\"card-body\">\r\n                         <h4>Add\\Update Fault </h4>\r\n                      <div className=\"card card-faultmanagement-child\">\r\n                         <div className=\"card-header\">\r\n                     \r\n                      \r\n                         <div className=\"line-b-select-3\">\r\n                           <p>Line Type:</p>\r\n                           <div className=\"container-3\">\r\n                          <Select\r\n                         onChange={(value) => handleline(value)}\r\n                         value={linedata.value}\r\n                           options={[\r\n                             ...linedata.map((ele) => {\r\n                               return {\r\n                                value: ele.LineCode,\r\n                                 label: ele.LineName,\r\n                               };\r\n                             }),\r\n                           ]}\r\n                          />\r\n                          </div>\r\n                          \r\n                        </div>\r\n    \r\n                        <div className=\"line-b-select-4\">\r\n                          <p>Machine/Process:</p>\r\n                          <div className=\"container-4\">\r\n                          <Select\r\n                            onChange={(value) => handleMachineProcess(value)}\r\n                            value={machinedata.value}\r\n                              options={[\r\n                                ...machinedata.map((ele) => {\r\n                                  return {\r\n                                   value: ele.Id,\r\n                                    label: ele.MachineName,\r\n                                  };\r\n                                }),\r\n                              ]}\r\n                          />\r\n                          </div>\r\n                          \r\n                        </div>\r\n                       <div className=\"line-b-select-7\">\r\n                          <p className=\"\">Fault:</p>\r\n                          <div className=\"container-7\">\r\n                          <InputGroup className=\"mb-3\">\r\n            {/* <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text> */}\r\n                          <Form.Control\r\n                           placeholder=\"\"\r\n                           value = {fault}\r\n                           onChange = {(e) => handlefault(e)}\r\n                             aria-label=\"\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                              />\r\n                           </InputGroup>\r\n                          </div>\r\n                          </div>\r\n   \r\n                          <div className=\"line-b-select-8\">\r\n                          \r\n                          <div className=\"container-8\">\r\n                          <Form>\r\n          {['checkbox'].map((type) => (\r\n            <div key={`inline-${type}`} className=\"mb-3\">\r\n              <Form.Check\r\n                inline\r\n                label=\"Is Active\"\r\n                onChange = {(e) => handleIsActive(e)}\r\n                name=\"group1\"\r\n                type={type}\r\n                id={`inline-${type}-1`}\r\n              />\r\n             </div>\r\n          ))}\r\n        </Form>\r\n            </div>\r\n                </div>    \r\n                <div className=\"line-b-select-9\">\r\n                          <div className=\"container-9\">\r\n                          <Form>\r\n          {['checkbox'].map((type) => (\r\n            <div key={`inline-${type}`} className=\"mb-3\">\r\n              <Form.Check\r\n                inline\r\n                label=\"Is Planned\"\r\n                onChange = {(e) => handleIsPlanned(e)}\r\n                name=\"group1\"\r\n                type={type}\r\n                id={`inline-${type}-1`}\r\n              />\r\n             </div>\r\n          ))}\r\n        </Form></div></div>\r\n   \r\n        <div className=\"line-b-select-15\">\r\n        <p className=\"PD\">Planned DownTime:</p>\r\n                          <div className=\"container-15\" >\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Form.Control\r\n                           inline\r\n                           label=\"Planned DownTime :\"\r\n                           placeholder=\"\"\r\n                           value = {planneddowntime}\r\n                           onChange = {(e) => handleplanneddowntime(e)}\r\n                             aria-label=\"\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                              />\r\n                               <p className=\"minutes\">(Inminutes)</p>\r\n                               </InputGroup>\r\n                         </div></div>\r\n                          \r\n                          \r\n               \r\n\r\n\r\n\r\n\r\n                        <button className=\"classbutton1\"\r\n                          onClick={() => {\r\n                            addFault()\r\n                          }}\r\n                        >\r\n                          Save\r\n                        </button>\r\n    \r\n                        <button className=\"classbutton2\"\r\n                          onClick={(e) => {\r\n                            updateFault()\r\n                          }}\r\n                        >\r\n                         Update\r\n                        </button>\r\n    \r\n                        <button className=\"classbutton3\"\r\n                          onClick={(e) => {\r\n                            // this.getAllData()\r\n                          }}\r\n                        >\r\n                       Reset\r\n                        </button>\r\n    \r\n                       \r\n    \r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                  <Table bordered className=\"mg-b-0\">\r\n                   \r\n                    <thead>\r\n                      <tr>\r\n                        \r\n                        <th>Machine Process</th>\r\n                        <th>Fault</th>\r\n                        <th>IsPlanned</th>\r\n                        <th>IsActive</th>\r\n                        <th>Update</th>\r\n                      \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {faultlist.map((item) => (\r\n                <tr key={item._id}>\r\n                  <td>{item.MachineName}</td>\r\n              <td>{item.Fault}</td>\r\n              <td>{item.IsPlanned}</td>\r\n              <td>{item.IsActive}</td>\r\n              <td>{  <div onClick={() => update(item.Fault)}>Update</div>}</td>\r\n           \r\n             \r\n             \r\n             </tr>\r\n          ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n                            </div></div>\r\n                     </div>\r\n                    {/* card-body */}\r\n                  </div>\r\n        </div>\r\n     )\r\n}\r\nexport default FaultManagement\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component, useCallback, useEffect,useState } from \"react\";\r\n// import Select from \"react-select\";\r\n// import { Table } from 'react-bootstrap';\r\n// import { Form } from \"react-bootstrap\";\r\n// import InputGroup from 'react-bootstrap/InputGroup';\r\n// import AdminApi from '../../api/adminApi'\r\n// import dasboardApi from \"../../api/dashboardApi\"\r\n  \r\n\r\n// const FaultManagement = () =>{\r\n//   const[filetype,setFileType] = useState({})\r\n//   const [lineData, setLineData] = useState([])\r\n//   const[line,setLine] = useState(\"\")\r\n\r\n//   const getLineData = useCallback(() => {\r\n//     dasboardApi.getLineData()\r\n//     .then((res)=>{\r\n//       console.log(\"getLineData\",res.data)\r\n//       setLineData(res.data)\r\n//     })\r\n//   })\r\n\r\n//   const getMachineData = useCallback(() => {\r\n//     dasboardApi.getLineData()\r\n//     .then((res)=>{\r\n//       console.log(\"getLineData\",res.data)\r\n//       setLineData(res.data)\r\n//     })\r\n//   })\r\n\r\n//   const handleline = (value) =>{\r\n//    setLine(value.value)\r\n//     }\r\n\r\n//   useEffect(() =>{\r\n//     getLineData()\r\n//   },[])\r\n\r\n \r\n\r\n//   return(\r\n//     <div className=\"batch\">\r\n     \r\n       \r\n//              <div className=\"card card-faultmanagement-one\">\r\n//              <div className=\"card-header\">\r\n//                  <h7>Fault Management</h7>\r\n            \r\n        \r\n                      \r\n//                        </div>\r\n                    \r\n                   \r\n//                     <div className=\"card-body\">\r\n//                          <h4>Add\\Update Fault </h4>\r\n//                       <div className=\"card card-faultmanagement-child\">\r\n//                          <div className=\"card-header\">\r\n                     \r\n                      \r\n//                          <div className=\"line-b-select-3\">\r\n//                            <p>Line Type:</p>\r\n//                            <div className=\"container-3\">\r\n//                           <Select\r\n//                           onChange={(value) => handleline(value)}\r\n//                           value={lineData.value}\r\n//                          options={[\r\n//                            ...lineData.map((ele) => {\r\n                            \r\n//                               return {\r\n//                                 value: ele.LineCode,\r\n//                                 label: ele.LineName,\r\n//                               };\r\n//                             }),\r\n//                          ]}\r\n//                           />\r\n//                           </div>\r\n                          \r\n//                         </div>\r\n    \r\n//                         <div className=\"line-b-select-4\">\r\n//                           <p>Machine/Process:</p>\r\n//                           <div className=\"container-4\">\r\n//                           <Select\r\n//                            // onChange={(e) => this.handleline(e)}\r\n//                            // value={this.state.selectedLine}\r\n//                             options={[\r\n//                               // ...lineData.map((ele) => {\r\n//                               //   return {\r\n//                               //     value: ele.LineCode,\r\n//                               //     label: ele.LineName,\r\n//                               //   };\r\n//                               // }),\r\n//                             ]}\r\n//                           />\r\n//                           </div>\r\n                          \r\n//                         </div>\r\n                       \r\n    \r\n                          \r\n                          \r\n    \r\n//                           <div className=\"line-b-select-7\">\r\n//                           <p className=\"\">Fault:</p>\r\n//                           <div className=\"container-7\">\r\n//                           <InputGroup className=\"mb-3\">\r\n//                            {/* <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text> */}\r\n//                           <Form.Control\r\n//                              placeholder=\"\"\r\n//                              aria-label=\"\"\r\n//                              aria-describedby=\"basic-addon1\"\r\n//                               />\r\n//                            </InputGroup>\r\n//                           </div>\r\n//                           </div>\r\n    \r\n//                           <div className=\"line-b-select-8\">\r\n                          \r\n//                           <div className=\"container-8\">\r\n//                           <Form>\r\n//           {['checkbox'].map((type) => (\r\n//             <div key={`inline-${type}`} className=\"mb-3\">\r\n//               <Form.Check\r\n//                 inline\r\n//                 label=\"All Status\"\r\n//                 name=\"group1\"\r\n//                 type={type}\r\n//                 id={`inline-${type}-1`}\r\n//               />\r\n             \r\n             \r\n//             </div>\r\n//           ))}\r\n//         </Form>\r\n//                           </div>\r\n//                           </div>    <div className=\"line-b-select-9\">\r\n                          \r\n//                           <div className=\"container-9\">\r\n//                           <Form>\r\n//           {['checkbox'].map((type) => (\r\n//             <div key={`inline-${type}`} className=\"mb-3\">\r\n//               <Form.Check\r\n//                 inline\r\n//                 label=\"Is Planned\"\r\n//                 name=\"group1\"\r\n//                 type={type}\r\n//                 id={`inline-${type}-1`}\r\n//               />\r\n             \r\n             \r\n//             </div>\r\n//           ))}\r\n//         </Form>\r\n//                           </div>\r\n//                           </div>\r\n    \r\n                          \r\n                          \r\n                      \r\n//                         <button className=\"classbutton1\"\r\n//                           onClick={(e) => {\r\n//                             this.getAllData()\r\n//                           }}\r\n//                         >\r\n//                           Save\r\n//                         </button>\r\n    \r\n//                         <button className=\"classbutton2\"\r\n//                           onClick={(e) => {\r\n//                             this.getAllData()\r\n//                           }}\r\n//                         >\r\n//                          Update\r\n//                         </button>\r\n    \r\n//                         <button className=\"classbutton3\"\r\n//                           onClick={(e) => {\r\n//                             this.getAllData()\r\n//                           }}\r\n//                         >\r\n//                        Reset\r\n//                         </button>\r\n    \r\n                       \r\n    \r\n//                         </div>\r\n//                         <div className=\"card-body\">\r\n//                         <div className=\"table-responsive\">\r\n//                   <Table bordered className=\"mg-b-0\">\r\n                   \r\n//                     <thead>\r\n//                       <tr>\r\n//                         <th>Name</th>\r\n//                         <th>User Id</th>\r\n//                         <th>Email Id</th>\r\n//                         <th>UserRole</th>\r\n//                         <th>IsActive</th>\r\n                       \r\n                       \r\n                        \r\n                        \r\n//                       </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                       <tr>\r\n//                         <th scope=\"row\">Abdul</th>\r\n//                         <td>A202</td>\r\n//                         <td>AP Premium</td>\r\n//                         <td>operator</td>\r\n//                         <td>Y</td>\r\n                  \r\n//                       </tr>\r\n//                       <tr>\r\n//                         <th scope=\"row\">Vinesh</th>\r\n//                         <td>A202</td>\r\n//                         <td>AP Premium</td>\r\n//                         <td>operator</td>\r\n//                         <td>Y</td>\r\n                       \r\n//                       </tr>\r\n//                       <tr>\r\n//                         <th scope=\"row\">Ramesh</th>\r\n//                         <td>A202</td>\r\n//                         <td>AP Premium</td>\r\n//                         <td>operator</td>\r\n//                         <td>Y</td>\r\n                        \r\n//                       </tr>\r\n//                       <tr>\r\n//                         <th scope=\"row\">Amit</th>\r\n//                         <td>A202</td>\r\n//                         <td>AP Premium</td>\r\n//                         <td>operator</td>\r\n//                         <td>Y</td>\r\n                      \r\n//                       </tr>\r\n//                       <tr>\r\n//                         <th scope=\"row\">Sumit</th>\r\n//                         <td>A202</td>\r\n//                         <td>AP Premium</td>\r\n//                         <td>operator</td>\r\n//                         <td>Y</td>\r\n                       \r\n//                       </tr>\r\n                    \r\n                    \r\n                    \r\n                    \r\n                     \r\n                     \r\n                     \r\n//                     </tbody>\r\n//                   </Table>\r\n//                 </div>\r\n                            \r\n//                         </div>\r\n    \r\n//                      </div>\r\n                     \r\n    \r\n                      \r\n//                     </div>\r\n//                     {/* card-body */}\r\n//                   </div>\r\n//         </div>\r\n    \r\n    \r\n//   )\r\n// }\r\n// export default FaultManagement"],"sourceRoot":""}