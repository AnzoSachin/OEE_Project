{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","api/lineStatusApi.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","api/dashboardApi.js","app/linestatus/linebreakdown.js"],"names":["Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","baseurl","lineStatusApi","getBreakDownDetail","linecode","console","log","fetch","method","headers","body","JSON","stringify","getPreviousBreakDownDetail","data","getExcelExportBreakDownDetail","getShiftWiseBreakDownDetail","getOfficerCommentOnBreakdown","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","dasboardApi","getLineData","axios","getShiftData","getBlock","getCurrentLineStatus","getChartData","getPieChartData","getGridData","getLineBreakageTimmings","getLabelsData","getOEETrendData","getComplainData","getLineDetails","LineBreakDown","useState","linedata","setLineData","line","setLine","BreakDownStatus","setStatus","useCallback","then","res","useEffect","onChange","handleline","options","map","ele","LineCode","label","LineName","onClick","e","json","item","BDStartTime","BDEndTime"],"mappings":"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","file":"static/js/29.d2851996.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nvar Table = React.forwardRef(function (_ref, ref) {\r\n  var bsPrefix = _ref.bsPrefix,\r\n      className = _ref.className,\r\n      striped = _ref.striped,\r\n      bordered = _ref.bordered,\r\n      borderless = _ref.borderless,\r\n      hover = _ref.hover,\r\n      size = _ref.size,\r\n      variant = _ref.variant,\r\n      responsive = _ref.responsive,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\r\n\r\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\r\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\r\n  var table = React.createElement(\"table\", _extends({}, props, {\r\n    className: classes,\r\n    ref: ref\r\n  }));\r\n\r\n  if (responsive) {\r\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\r\n\r\n    if (typeof responsive === 'string') {\r\n      responsiveClass = responsiveClass + \"-\" + responsive;\r\n    }\r\n\r\n    return React.createElement(\"div\", {\r\n      className: responsiveClass\r\n    }, table);\r\n  }\r\n\r\n  return table;\r\n});\r\nexport default Table;","import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/linestatus'\r\n\r\n\r\nconst lineStatusApi = {\r\n\r\n    getBreakDownDetail: function(linecode) {\r\n        console.log(\"linecode\",linecode)\r\n        return fetch(`${baseurl}/breakdowndetail`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            },\r\n            body: JSON.stringify(linecode),\r\n          })\r\n    },\r\n\r\n    getPreviousBreakDownDetail: function(data) {\r\n      console.log(\"data in api\",data)\r\n      return fetch(`${baseurl}/previousbreakdowndetail`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            \r\n          },\r\n          body: JSON.stringify(data),\r\n        })\r\n  },\r\n  getExcelExportBreakDownDetail: function(data) {\r\n    console.log(\"data in api\",data)\r\n    return fetch(`${baseurl}/excelexportbreakdowndetail`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n},\r\ngetShiftWiseBreakDownDetail: function(data) {\r\n  console.log(\"data in api\",data)\r\n  return fetch(`${baseurl}/shiftwisebreakdowndetail`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n},\r\ngetOfficerCommentOnBreakdown: function(data) {\r\n\r\n  console.log(\"data in api\",data)\r\n  return fetch(`${baseurl}/officercomment`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n},\r\n}\r\n\r\nexport default lineStatusApi","import arrayWithHoles from \"./arrayWithHoles\";\r\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\r\nimport nonIterableRest from \"./nonIterableRest\";\r\nexport default function _slicedToArray(arr, i) {\r\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\r\n}","export default function _arrayWithHoles(arr) {\r\n  if (Array.isArray(arr)) return arr;\r\n}","export default function _iterableToArrayLimit(arr, i) {\r\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\r\n    return;\r\n  }\r\n\r\n  var _arr = [];\r\n  var _n = true;\r\n  var _d = false;\r\n  var _e = undefined;\r\n\r\n  try {\r\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\r\n      _arr.push(_s.value);\r\n\r\n      if (i && _arr.length === i) break;\r\n    }\r\n  } catch (err) {\r\n    _d = true;\r\n    _e = err;\r\n  } finally {\r\n    try {\r\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\r\n    } finally {\r\n      if (_d) throw _e;\r\n    }\r\n  }\r\n\r\n  return _arr;\r\n}","export default function _nonIterableRest() {\r\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\r\n}","import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/dashboard'\r\n\r\nconst dasboardApi = {\r\n    getLineData:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/linedata`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n\r\n    getShiftData:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/shiftdata`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n\r\n    getBlock:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/block`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n\r\n    getCurrentLineStatus:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/currentlinestatus`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n    getChartData:function(data)\r\n    \r\n    {  \r\n      \r\n    return fetch(`${baseurl}/chartdata`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n           \r\n        // return axios({\r\n        //   \"method\":\"GET\",\r\n        //   \"url\": `${baseurl}/chartdata`,\r\n        //   \"headers\": {\r\n        //     \"content-type\":\"application/json\",\r\n        //   },\r\n        //   body: JSON.stringify(data),\r\n        // })\r\n    },\r\n    getPieChartData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/piechartdata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getGridData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/griddata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getLineBreakageTimmings:function(data)\r\n    {\r\n      return fetch(`${baseurl}/linebreakagetimmings`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getLabelsData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/labeldata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getOEETrendData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/oeetrenddata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getComplainData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/complaindata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n\r\n    getLineDetails:function(data)\r\n    {\r\n      return fetch(`${baseurl}/linedetails`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n}\r\n\r\nexport default dasboardApi","\r\nimport React, { Component, useCallback, useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Table } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport dasboardApi from \"../../api/dashboardApi\"\r\nimport lineStatusApi from \"../../api/lineStatusApi\"\r\n\r\nconst LineBreakDown = () =>{\r\n  const[linedata,setLineData] = useState([])\r\n  const[line,setLine] = useState({})\r\n  const[BreakDownStatus,setStatus] = useState([]) \r\n\r\n\r\n \r\n\r\n  const getLineData = useCallback(()=>{\r\n    dasboardApi.getLineData()\r\n    .then((res)=>{\r\n      console.log(\"res\",res.data)\r\n      setLineData(res.data)\r\n    })\r\n  })\r\n  const handleline = (value) =>{\r\n   \r\n  \r\n    setLine(value.value)\r\n\r\n   \r\n  }\r\n\r\n  const GetBreakDownData = ()=>{\r\n    lineStatusApi.getBreakDownDetail({line})\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n     \r\n           console.log(\"getBreakDownDetail\",data )\r\n           setStatus(data)\r\n          \r\n          })\r\n   \r\n  }\r\n  useEffect(() =>{\r\n    getLineData()\r\n  },[]\r\n  )\r\n \r\n    return(\r\n\r\n     \r\n    <div className=\"LineBreakDown\">\r\n     \r\n       \r\n        <div className=\"card card-linebreakdown-one\">\r\n        <div className=\"card-header\">\r\n            <h7>Line Status</h7>\r\n        \r\n    \r\n                  \r\n                  </div>\r\n                \r\n               \r\n                <div className=\"card-body\">\r\n                    <h4>Line Breakdown Status</h4>\r\n                 <div className=\"card card-linebreakdown-child\">\r\n                    <div className=\"card-header\">\r\n                    <div className=\"line-b-select\">\r\n                      <p className=\"\">Select Line:</p>\r\n                      <div className=\"container\">\r\n                      <Select\r\n                        onChange={(value) => handleline(value)}\r\n                        value={linedata.value}\r\n                        options={[\r\n                          ...linedata.map((ele) => {\r\n                           \r\n                             return {\r\n                               value: ele.LineCode,\r\n                               label: ele.LineName,\r\n                             };\r\n                           }),\r\n                        ]}\r\n                      />\r\n                      </div>\r\n                      \r\n                    </div>\r\n                    <button className=\"classbutton\"\r\n                      onClick={(e) => {GetBreakDownData()}}\r\n                    >\r\n                      Refresh\r\n                    </button>\r\n\r\n                    <h4>N/A</h4>\r\n\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n                    <Table bordered className=\"mg-b-0\">\r\n               \r\n               <thead>\r\n                 <tr>\r\n                   <th>Line Code</th>\r\n                   <th>BDStart Time</th>\r\n                   <th>BDEnd Time</th>\r\n                   \r\n                   \r\n                  \r\n                   \r\n                   \r\n                 </tr>\r\n               </thead>\r\n               <tbody>\r\n               {BreakDownStatus.map((item) => (\r\n                <tr>\r\n             \r\n              <td>{item.LineCode}</td>\r\n              <td>{item.BDStartTime}</td>\r\n              <td>{item.BDEndTime}</td>\r\n            \r\n              \r\n            \r\n               \r\n            </tr>\r\n          ))}\r\n               \r\n               \r\n               \r\n               \r\n                \r\n                \r\n                \r\n               </tbody>\r\n             </Table>\r\n             </div>\r\n                    </div>\r\n\r\n                 </div>\r\n                 \r\n\r\n                  \r\n                </div>\r\n                {/* card-body */}\r\n              </div>\r\n    </div>\r\n \r\n   \r\n    \r\n    \r\n\r\n\r\n    )\r\n}\r\nexport default LineBreakDown"],"sourceRoot":""}