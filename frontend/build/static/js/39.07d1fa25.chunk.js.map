{"version":3,"sources":["app/dashboard/OEEAnalysis.js"],"names":["charts","FusionCharts","OEEAnalysis","props","useState","newoee","setOee","Ioee","labelData","OEE","dataSource","chart","caption","showvalues","formatnumberscale","showpercentvalues","showsum","plottooltext","theme","categories","category","label","dataset","seriesname","data","lineBreakageTimmingData","filter","item","BStartTime","map","value","BStopTime","NextBStartTime","className","onClick","FlagUpdate","type","class","aria-label","width","height","dataFormat","Control","placeholder","aria-describedby","bordered","key","_id","scope","STARTTIME","ENDTIME","timediff","MachineName","Check","inline","e","downtime","newAvail","parseInt","Avail","nOee","Performance","onselect","name","id"],"mappings":"kNAYAA,IAAOC,KA0PQC,UAvPK,SAACC,GAAU,IAAD,EACJC,mBAAS,IADL,mBACrBC,EADqB,KACdC,EADc,KAIvBC,EAAOJ,EAAMK,UAAUC,IAuCtBC,EAAa,CACjBC,MAAO,CACLC,QAAS,yBACTC,WAAY,IACZC,kBAAmB,IACnBC,kBAAmB,IACnBC,QAAS,IACTC,aACA,iFACAC,MAAO,UAETC,WAAY,CACV,CACEC,SAAU,CAGR,CACEC,MAAO,WAKfC,QAAS,CACP,CACEC,WAAY,cACZC,KAjDarB,EAAMsB,wBAAwB,GAAGC,QAAO,SAACC,GAGxD,OAAOA,EAAKC,WAAa,KAE1BC,KAAI,SAACC,GACH,MAAO,CAACA,MAAMA,EAAMF,gBA8CrB,CACEL,WAAY,aACZC,KA1CYrB,EAAMsB,wBAAwB,GAAGI,KAAI,SAACF,GACtD,MAAO,CAACG,MAAMH,EAAKI,eA4CjB,CACER,WAAY,mBACZC,KA5CiBrB,EAAMsB,wBAAwB,GAAGI,KAAI,SAACF,GAC3D,MAAO,CAACG,MAAMH,EAAKK,sBAsDnB,OACA,yBAAKC,UAAU,eAGX,yBAAKA,UAAU,6BACf,yBAAKA,UAAU,eACX,6DAGA,4BAAQC,QAAS/B,EAAMgC,WAAYC,KAAK,SAASC,MAAM,YAAYC,aAAW,SAA9E,MAQI,yBAAKL,UAAU,aACb,yBAAKA,UAAU,gCACf,kBAAC,IAAD,CACVG,KAAK,eACLG,MAAM,OACNC,OAAO,MACPC,WAAW,OACX/B,WAAYA,KAGA,4CACH,yBAAKuB,UAAU,+BACZ,yBAAKA,UAAU,eACf,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,IAAb,eACA,yBAAKA,UAAU,aACf,kBAAC,IAAD,CAAYA,UAAU,QAEtB,kBAAC,IAAKS,QAAN,CACCC,YAAY,GACXb,MAASvB,EACR+B,aAAW,GACZM,mBAAiB,oBAOrB,yBAAKX,UAAU,iBACb,uBAAGA,UAAU,IAAb,YACA,yBAAKA,UAAU,aACf,kBAAC,IAAD,CAAYA,UAAU,QAEtB,kBAAC,IAAKS,QAAN,CACCC,YAAY,GACZb,MAASzB,EACPiC,aAAW,GACZM,mBAAiB,qBAWrB,yBAAKX,UAAU,aACf,kBAAC,IAAD,CAAOY,UAAQ,EAACZ,UAAU,UAE/B,+BACE,4BACE,0CACA,wCACA,yCACA,gDACA,wCAOJ,+BAEC9B,EAAMsB,wBAAwB,GAAGI,KAAI,SAACF,GAAD,OAEzC,wBAAImB,IAAKnB,EAAKoB,KACN,wBAAIC,MAAM,OAAOrB,EAAKsB,WACtB,4BAAKtB,EAAKuB,SACV,4BAAKvB,EAAKwB,UACV,4BAAKxB,EAAKyB,aACV,8CAAmB,kBAAC,IAAD,KAChC,CAAC,YAAYvB,KAAI,SAACO,GAAD,OAChB,yBAAKU,IAAG,iBAAYV,GAAQH,UAAU,QACpC,kBAAC,IAAKoB,MAAN,CACEC,QAAM,EACNjC,MAAM,GACNa,QAAS,SAACqB,GAAD,OAlLJ,SAACC,GAGhB,IAAIC,EAAYC,SAASvD,EAAMK,UAAUmD,OAAOH,EAAS,IAAI,IACzDI,EAAOzD,EAAMK,UAAUqD,YAAYJ,EAAS,IAChDnD,EAAOsD,GA6KiBE,CAASnC,EAAKwB,WAC5BY,KAAK,SACL3B,KAAMA,EACN4B,GAAE,iBAAY5B,EAAZ","file":"static/js/39.07d1fa25.chunk.js","sourcesContent":["\r\nimport React, { Component, useState } from \"react\";\r\n\r\nimport { Table } from 'react-bootstrap';\r\n\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\n\r\ncharts(FusionCharts);\r\n\r\n\r\nconst OEEAnalysis = (props) =>{\r\n  const [newoee,setOee] = useState([])\r\n  \r\n  \r\n  var  Ioee = props.labelData.OEE\r\n \r\n \r\n\r\n const onselect =(downtime)=>{\r\n \r\n \r\n  let newAvail =  parseInt(props.labelData.Avail)+downtime/480*100\r\n  let nOee = props.labelData.Performance*newAvail/100\r\n  setOee(nOee)\r\n  \r\n\r\n\r\n}\r\n\r\n  const BStartTime = props.lineBreakageTimmingData[0].filter((item) =>{\r\n    \r\n     \r\n      return item.BStartTime > 0 //graph problem\r\n    \r\n  }).map((value)=>{\r\n       return {value:value.BStartTime}\r\n  })\r\n  \r\n\r\n  \r\n  \r\n  const BStopTime = props.lineBreakageTimmingData[0].map((item) =>{\r\n    return {value:item.BStopTime}\r\n  })\r\n  const NextBStartTime = props.lineBreakageTimmingData[0].map((item) =>{\r\n    return {value:item.NextBStartTime}\r\n  })\r\n  \r\n \r\n\r\n\r\n \r\n  \r\n  const dataSource = {\r\n    chart: {\r\n      caption: \"Production Line Status\",\r\n      showvalues: \"0\",\r\n      formatnumberscale: \"0\",\r\n      showpercentvalues: \"1\",\r\n      showsum: \"0\",\r\n      plottooltext:\r\n      \"<b>$dataValue</b> from $seriesName in $label {br}<b>$percentValue</b> of total\",\r\n      theme: \"fusion\"\r\n    },\r\n    categories: [\r\n      {\r\n        category: [\r\n         \r\n          \r\n          {\r\n            label: \"Data\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    dataset: [\r\n      {\r\n        seriesname: \"BStart Time\",\r\n        data: BStartTime\r\n        \r\n      },\r\n      {\r\n        seriesname: \"BStop Time\",\r\n        data:BStopTime\r\n        \r\n      },\r\n      {\r\n        seriesname: \"BNext Start Time\",\r\n        data:NextBStartTime\r\n        \r\n      }\r\n    ]\r\n\r\n\r\n  };\r\n\r\n \r\n\r\n\r\n    return(\r\n    <div className=\"OEEAnalysis\">\r\n     \r\n       \r\n        <div className=\"card card-OEEAnalysis-one\">\r\n        <div className=\"card-header\">\r\n            <h7>Production Time Line Analysis</h7>\r\n              \r\n          \r\n            <button onClick={props.FlagUpdate} type=\"button\" class=\"btn-close\" aria-label=\"Close\">X</button>\r\n         \r\n                  \r\n                  </div>\r\n\r\n\r\n                \r\n               \r\n                <div className=\"card-body\">\r\n                  <div className=\"card card-OEEAnalysis-child1\">\r\n                  <ReactFusioncharts\r\n        type=\"stackedbar3d\"\r\n        width=\"100%\"\r\n        height=\"80%\"\r\n        dataFormat=\"JSON\"\r\n        dataSource={dataSource }\r\n      />\r\n                  </div>\r\n                    <h4>OEE Analysis</h4>\r\n                 <div className=\"card card-OEEAnalysis-child\">\r\n                    <div className=\"card-header\">\r\n                    <div className=\"line-b-select\">\r\n                      <p className=\"\">Actual OEE:</p>\r\n                      <div className=\"container\">\r\n                      <InputGroup className=\"mb-3\">\r\n        {/* <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text> */}\r\n                      <Form.Control\r\n                       placeholder=\"\"\r\n                        value = {Ioee}\r\n                         aria-label=\"\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                          />\r\n                       </InputGroup>\r\n                      </div>\r\n                      \r\n                    </div>\r\n\r\n                    <div className=\"line-b-select\">\r\n                      <p className=\"\">New OEE:</p>\r\n                      <div className=\"container\">\r\n                      <InputGroup className=\"mb-3\">\r\n        {/* <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text> */}\r\n                      <Form.Control\r\n                       placeholder=\"\"\r\n                       value = {newoee}\r\n                         aria-label=\"\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                          />\r\n                       </InputGroup>\r\n                      </div>\r\n                      \r\n                    </div>\r\n                    \r\n\r\n                   \r\n\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Table bordered className=\"mg-b-0\">\r\n               \r\n               <thead>\r\n                 <tr>\r\n                   <th>Start Time</th>\r\n                   <th>End Time</th>\r\n                   <th>Down Time</th>\r\n                   <th>Breaking Process</th>\r\n                   <th>Select</th>\r\n                  \r\n                  \r\n                   \r\n                   \r\n                 </tr>\r\n               </thead>\r\n               <tbody>\r\n\r\n               {props.lineBreakageTimmingData[1].map((item) => (\r\n               \r\n            <tr key={item._id}>\r\n                    <th scope=\"row\">{item.STARTTIME}</th>\r\n                    <td>{item.ENDTIME}</td>\r\n                    <td>{item.timediff}</td>\r\n                    <td>{item.MachineName}</td>\r\n                    <td>               <Form>\r\n      {['checkbox'].map((type) => (\r\n        <div key={`inline-${type}`} className=\"mb-3\">\r\n          <Form.Check\r\n            inline\r\n            label=\"\"\r\n            onClick={(e)=>onselect(item.timediff)}\r\n            name=\"group1\"\r\n            type={type}\r\n            id={`inline-${type}-1`}\r\n          />\r\n         \r\n         \r\n        </div>\r\n      ))}\r\n    </Form></td>\r\n\r\n              \r\n              \r\n             \r\n             \r\n            </tr>\r\n          ))}\r\n                 \r\n                 {/* <tr>\r\n                   <th scope=\"row\">10001</th>\r\n                   <td>A202</td>\r\n                   <td>Machical</td>\r\n                   <td>Red</td>\r\n                   <td>Open</td>\r\n                 </tr> */}\r\n               \r\n               \r\n                 {/* {props.lineBreakageTimmingData[1].map((item) => {\r\n                    <tr key={item._id}>\r\n                    <th scope=\"row\">{item.STARTTIME}</th>\r\n                    <td>{item.ENDTIME}</td>\r\n                    <td>{item.timediff}</td>\r\n                    <td>{item.MachineName}</td>\r\n                    <td>not ready yet...</td>\r\n                  </tr>\r\n\r\n                 })} */}\r\n               \r\n                \r\n                \r\n                \r\n               </tbody>\r\n             </Table>\r\n                    </div>\r\n\r\n                 </div>\r\n                 \r\n\r\n                  \r\n                </div>\r\n                {/* card-body */}\r\n              </div>\r\n    </div>\r\n \r\n   \r\n    \r\n    \r\n\r\n\r\n    )\r\n}\r\nexport default OEEAnalysis"],"sourceRoot":""}