{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","api/complaintApi.js","api/dashboardApi.js","../node_modules/react-bootstrap/esm/InputGroup.js","app/complaints/bookcomplaint.js"],"names":["Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","baseurl","ComplaintApi","getDepartmentList","axios","getUserList","getMachineList","getComplaintStatus","getComplaintData","data1","console","log","fetch","method","headers","body","JSON","stringify","insertComplaintData","data","saveComplaintData","checkCount","dasboardApi","getLineData","getShiftData","getBlock","getCurrentLineStatus","getChartData","getPieChartData","getGridData","getLineBreakageTimmings","getLabelsData","getOEETrendData","getComplainData","getLineDetails","InputGroup","_ref$as","as","Component","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","BookComplaint","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","useState","tag","setTag","user","setUser","line","setLine","status","setStatus","comment","setComment","machine","setMachine","linedata","setLineData","complaint","setComplaint","department","setDepartment","userlistdata","setUserData","complaintID","machinedata","setMachineData","complaintdata","setComplaintData","deparmentdata","setDepartmentData","useCallback","then","res","icn","json","recordsets","SaveAllData","comments","toast","info","output","ComplaintID","useEffect","position","autoClose","hideProgressBar","newestOnTop","theme","onChange","value","handleline","options","map","ele","LineCode","label","LineName","handlemachine","Id","MachineName","handleuser","User","handledepartment","DepartmentKey","Department","Group","Check","e","name","aria-label","Control","placeholder","target","handlescomment","aria-describedby","handlestatus","StatusKey","StatusValue","onClick","item","key","_id","Line","Tag","Status","moment","ComplaintDate","format"],"mappings":"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","file":"static/js/32.72dab94a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nvar Table = React.forwardRef(function (_ref, ref) {\r\n  var bsPrefix = _ref.bsPrefix,\r\n      className = _ref.className,\r\n      striped = _ref.striped,\r\n      bordered = _ref.bordered,\r\n      borderless = _ref.borderless,\r\n      hover = _ref.hover,\r\n      size = _ref.size,\r\n      variant = _ref.variant,\r\n      responsive = _ref.responsive,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\r\n\r\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\r\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\r\n  var table = React.createElement(\"table\", _extends({}, props, {\r\n    className: classes,\r\n    ref: ref\r\n  }));\r\n\r\n  if (responsive) {\r\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\r\n\r\n    if (typeof responsive === 'string') {\r\n      responsiveClass = responsiveClass + \"-\" + responsive;\r\n    }\r\n\r\n    return React.createElement(\"div\", {\r\n      className: responsiveClass\r\n    }, table);\r\n  }\r\n\r\n  return table;\r\n});\r\nexport default Table;","import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/complaint'\r\n\r\n\r\nconst ComplaintApi = {\r\n    getDepartmentList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/departmentlist`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getUserList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/userlist`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getMachineList:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/machinelist`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n\r\n    getComplaintStatus:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/complaintstatus`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n    getComplaintData:function(data1) {\r\n        console.log(\"getComplaintData api\",data1)\r\n        return fetch(`${baseurl}/complaintdata`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            },\r\n            body: JSON.stringify(data1),\r\n          })\r\n      }, \r\n      insertComplaintData:function(data) {\r\n        console.log(\"getComplaintData api\",data)\r\n        return fetch(`${baseurl}/insertcomplaintdata`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            },\r\n            body: JSON.stringify(data),\r\n          })\r\n      } ,\r\n\r\n      saveComplaintData:function(data) {\r\n        console.log(\"getComplaintData api\",data)\r\n        return fetch(`${baseurl}/savecomplaintdata`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            },\r\n            body: JSON.stringify(data),\r\n          })\r\n      } ,\r\n\r\n      checkCount:function(data) {\r\n        console.log(\"checkount\",data)\r\n        return fetch(`${baseurl}/exportcomplaint`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            },\r\n            body: JSON.stringify(data),\r\n          })\r\n      } ,\r\n}\r\n\r\n\r\n\r\nexport default ComplaintApi","import axios from \"axios\"\r\nlet baseurl='http://localhost:5000/anzo/dashboard'\r\n\r\nconst dasboardApi = {\r\n    getLineData:function()\r\n    {\r\n        return  axios({\r\n            \"method\": \"GET\",\r\n            \"url\": `${baseurl}/linedata`,\r\n            \"headers\": {\r\n              \"content-type\": \"application/json\",\r\n              \r\n            }\r\n          })\r\n    },\r\n\r\n    getShiftData:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/shiftdata`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n\r\n    getBlock:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/block`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n\r\n    getCurrentLineStatus:function()\r\n    {\r\n        return axios({\r\n          \"method\":\"GET\",\r\n          \"url\": `${baseurl}/currentlinestatus`,\r\n          \"headers\": {\r\n            \"content-type\":\"application/json\",\r\n          }\r\n        })\r\n    },\r\n    getChartData:function(data)\r\n    \r\n    {  \r\n      \r\n    return fetch(`${baseurl}/chartdata`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n           \r\n        // return axios({\r\n        //   \"method\":\"GET\",\r\n        //   \"url\": `${baseurl}/chartdata`,\r\n        //   \"headers\": {\r\n        //     \"content-type\":\"application/json\",\r\n        //   },\r\n        //   body: JSON.stringify(data),\r\n        // })\r\n    },\r\n    getPieChartData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/piechartdata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getGridData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/griddata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getLineBreakageTimmings:function(data)\r\n    {\r\n      return fetch(`${baseurl}/linebreakagetimmings`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getLabelsData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/labeldata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getOEETrendData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/oeetrenddata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n    getComplainData:function(data)\r\n    {\r\n      return fetch(`${baseurl}/complaindata`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n\r\n    getLineDetails:function(data)\r\n    {\r\n      return fetch(`${baseurl}/linedetails`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n    },\r\n}\r\n\r\nexport default dasboardApi","import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport createWithBsPrefix from './createWithBsPrefix';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\n\r\n/**\r\n *\r\n * @property {InputGroupAppend} Append\r\n * @property {InputGroupPrepend} Prepend\r\n * @property {InputGroupText} Text\r\n * @property {InputGroupRadio} Radio\r\n * @property {InputGroupCheckbox} Checkbox\r\n */\r\nvar InputGroup = React.forwardRef(function (_ref, ref) {\r\n  var bsPrefix = _ref.bsPrefix,\r\n      size = _ref.size,\r\n      className = _ref.className,\r\n      _ref$as = _ref.as,\r\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\r\n\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\r\n  return React.createElement(Component, _extends({\r\n    ref: ref\r\n  }, props, {\r\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\r\n  }));\r\n});\r\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\r\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\r\nvar InputGroupText = createWithBsPrefix('input-group-text', {\r\n  Component: 'span'\r\n});\r\n\r\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\r\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\r\n    type: \"checkbox\"\r\n  }, props)));\r\n};\r\n\r\nvar InputGroupRadio = function InputGroupRadio(props) {\r\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\r\n    type: \"radio\"\r\n  }, props)));\r\n};\r\n\r\nInputGroup.displayName = 'InputGroup';\r\nInputGroup.Text = InputGroupText;\r\nInputGroup.Radio = InputGroupRadio;\r\nInputGroup.Checkbox = InputGroupCheckbox;\r\nInputGroup.Append = InputGroupAppend;\r\nInputGroup.Prepend = InputGroupPrepend;\r\nexport default InputGroup;","\r\nimport React, { Component, useCallback, useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { Table } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport dasboardApi from \"../../api/dashboardApi\"\r\nimport ComplaintApi from \"../../api/complaintApi\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport moment from 'moment'\r\n\r\n\r\nconst BookComplaint = () =>{\r\n  var today = new Date();\r\n  var dd = String(today.getDate()).padStart(2, '0');\r\n  var mm = String(today.getMonth() + 1).padStart(2, '0'); \r\n  var yyyy = today.getFullYear();\r\n  today = mm + '/' + dd + '/' + yyyy;\r\n  \r\n  const[tag,setTag] = useState(\"\")\r\n  const[user,setUser] = useState(\"\")\r\n  const[line,setLine] = useState(\"202\")\r\n  const[status,setStatus] = useState(\"\")\r\n  const[comment,setComment] = useState(\"\")\r\n  const[machine,setMachine] = useState(\"\")\r\n  const[linedata,setLineData] = useState([])\r\n  const[complaint,setComplaint] = useState([])\r\n  const[department,setDepartment] = useState(\"\")\r\n  const[userlistdata,setUserData] = useState([])\r\n  const[complaintID,setComplaintID] = useState([])\r\n  const[machinedata,setMachineData] = useState([])\r\n  const[complaintdata,setComplaintData] = useState([])\r\n  const[deparmentdata,setDepartmentData] = useState([])\r\n \r\n \r\n\r\n\r\n\r\n  const getLineData = useCallback(()=>{\r\n    dasboardApi.getLineData()\r\n    .then((res)=>{\r\n      console.log(\"getLineData\",res.data)\r\n      setLineData(res.data)\r\n    })\r\n  })\r\n\r\n  const getDepartmentList = useCallback(()=>{\r\n    ComplaintApi.getDepartmentList()\r\n    .then((res)=>{\r\n      console.log(\"getDepartmentList\",res.data)\r\n      setDepartmentData(res.data)\r\n     \r\n    })\r\n    \r\n  })\r\n  const getUserList = useCallback(()=>{\r\n    ComplaintApi.getUserList()\r\n    .then((res)=>{\r\n      console.log(\"getUserList\",res.data)\r\n      setUserData(res.data)\r\n     \r\n    })\r\n    \r\n  })\r\n\r\n  const getMachineList = useCallback(()=>{\r\n    ComplaintApi.getMachineList()\r\n    .then((res)=>{\r\n      console.log(\"getMachineList\",res.data)\r\n      setMachineData(res.data)\r\n     \r\n    })\r\n    \r\n  })\r\n\r\n  const getComplaintStatus = useCallback(()=>{\r\n    ComplaintApi.getComplaintStatus()\r\n    .then((res)=>{\r\n      console.log(\"getComplaintStatus\",res.data)\r\n      setComplaintData(res.data)\r\n     // setMachineData(res.data)\r\n     \r\n    })\r\n    \r\n  })\r\n  const getComplaintData = useCallback(()=>{\r\n    let icn=0\r\n    console.log(\"jhghj\",icn++)\r\n    ComplaintApi.getComplaintData({line})\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n     \r\n           console.log(\"getComplaintData\",data.recordsets[2])\r\n           setComplaint(data.recordsets[2])\r\n      \r\n          })\r\n    \r\n  })\r\n  const insertComplaint = useCallback(()=>{\r\n  \r\n  \r\n    let comments = user+status+comment+today\r\n    ComplaintApi.saveComplaintData({line,machine,user,department,tag,comment,status,comments,complaintID})\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n                     toast.info(`Complaint created with complaintid ${complaintID}`)\r\n                     getComplaintData()\r\n        \r\n          \r\n      \r\n          })\r\n    \r\n  })\r\n\r\n  const SaveAllData = useCallback(()=>{\r\n    let comments = user+status+comment+today\r\n  \r\n     \r\n        ComplaintApi.insertComplaintData({line,machine,user,department,tag,comment,status,comments})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n           toast.info(`Complaint Register successfully with complaintid: ${data.output.ComplaintID}`)\r\n           getComplaintData()\r\n          \r\n          \r\n              })\r\n       \r\n     \r\n    \r\n   \r\n   \r\n })\r\n\r\n  const handleline = (value) =>{\r\n   \r\n  let line = value.value\r\n    setLine(value.value)\r\n    ComplaintApi.getComplaintData({line})\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n     \r\n            console.log(\"commmmmmm\",data.recordsets[2])\r\n           setComplaint(data.recordsets[2])\r\n          \r\n     \r\n          })\r\n   \r\n}\r\n\r\nconst handlemachine = (label) => {\r\n  \r\n  setMachine(label.value)\r\n\r\n}\r\n\r\nconst handleuser = (label) => {\r\n\r\n  setUser(label.value)\r\n \r\n}\r\n\r\nconst handledepartment = (label) => {\r\n \r\n\r\n  setDepartment(label.value)\r\n\r\n}\r\nconst handlestatus = (label) =>{\r\n\r\n  setStatus(label.value)\r\n\r\n\r\n}\r\n\r\nconst handlescomment = (e) =>{\r\n  \r\n  setComment(e.target.value)\r\n\r\n\r\n}\r\nconst handleredtag =(e) =>{\r\n \r\n  setTag(\"Red\")\r\n\r\n}\r\nconst handlewhitetag = (e) => {\r\n  setTag(\"White\")\r\n}\r\n\r\n\r\n  useEffect(() =>{\r\n    getLineData()\r\n    getUserList()\r\n    getMachineList()\r\n    getComplaintData()\r\n    getDepartmentList()\r\n    getComplaintStatus()\r\n  },[line]\r\n  )\r\n\r\n\r\n\r\n \r\n\r\n  \r\n    return(\r\n        <div className=\"bookcomplaints\">\r\n         <ToastContainer\r\nposition=\"top-right\"\r\nautoClose={5000}\r\nhideProgressBar={false}\r\nnewestOnTop={false}\r\n// closeOnClick\r\n// rtl={false}\r\n// pauseOnFocusLoss\r\n// draggable\r\n// pauseOnHover\r\ntheme=\"light\"\r\n/>\r\n<ToastContainer />\r\n       \r\n        <div className=\"card card-bookcomplaints-one\">\r\n        <div className=\"card-header\">\r\n            <h7>Complaint</h7>\r\n        \r\n    \r\n                  \r\n                  </div>\r\n                \r\n               \r\n                <div className=\"card-body\">\r\n                    <h4>Book Complaints </h4>\r\n                 <div className=\"card card-bookcomplaints-child\">\r\n                    <div className=\"card-header\">\r\n                    <div className=\"line-b-select-1\">\r\n                      <p className=\"\">Select Line:</p>\r\n                      <div className=\"container-1\">\r\n                      <Select\r\n                        onChange={(value) => handleline(value)}\r\n                        value={linedata.value}\r\n                        options={[\r\n                          ...linedata.map((ele) => {\r\n                           \r\n                             return {\r\n                               value: ele.LineCode,\r\n                               label: ele.LineName,\r\n                             };\r\n                           }),\r\n                        ]}\r\n                      />\r\n                      </div>\r\n                      \r\n                    </div>\r\n                    <div className=\"line-b-select-2\">\r\n                      <p className=\"\">Machine:</p>\r\n                      <div className=\"container-2\">\r\n                      <Select\r\n                        onChange={(label) => handlemachine(label)}\r\n                        value={machinedata.label}\r\n                        options={[\r\n                          ...machinedata.map((ele) => {\r\n                           \r\n                           \r\n                             return {\r\n                              value: ele.Id,\r\n                              label: ele.MachineName,\r\n                             \r\n                             };\r\n                           }),\r\n                        ]}\r\n                      />\r\n                      </div>\r\n                      \r\n                    </div>\r\n                    <div className=\"line-b-select-3\">\r\n                      <p>Raised By:</p>\r\n                      <div className=\"container-3\">\r\n                      <Select\r\n                        onChange={(label) => handleuser(label)}\r\n                        value={userlistdata.label}\r\n                        options={[\r\n                          ...userlistdata.map((ele) => {\r\n                           \r\n                             return {\r\n                               value: ele.Id,\r\n                               label: ele.User,\r\n                             };\r\n                           }),\r\n                        ]}\r\n                      />\r\n                      </div>\r\n                      \r\n                    </div>\r\n                    <div className=\"line-b-select-4\">\r\n                      <p>Raised To:</p>\r\n                      <div className=\"container-4\">\r\n                      <Select\r\n                        onChange={(label) => handledepartment(label)}\r\n                        value={linedata.label}\r\n                        options={[\r\n                          ...deparmentdata.map((ele) => {\r\n                           \r\n                             return {\r\n                               value: ele.DepartmentKey,\r\n                               label: ele.Department,\r\n                             };\r\n                           }),\r\n                        ]}\r\n                      />\r\n                      </div>\r\n                      \r\n                    </div>\r\n\r\n                    <div className=\"line-b-select-5\">\r\n                      <p>Tag:</p>\r\n                      <div className=\"container-5\">\r\n                      <Form.Group>\r\n        <Form.Check\r\n          value=\"\"\r\n          onChange = {(e) => {handlewhitetag(e)}}\r\n          type=\"radio\"\r\n          name=\"group1\"\r\n          aria-label=\"radio 1\"\r\n          label=\"White\"\r\n        \r\n          \r\n        />\r\n        <Form.Check\r\n          value=\"\"\r\n          onChange = {(e) => {handleredtag(e)}}\r\n          type=\"radio\"\r\n          name=\"group1\"\r\n          aria-label=\"radio 2\"\r\n          label=\"Red\"\r\n         \r\n        />\r\n      </Form.Group>\r\n                      </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"line-b-select-6\">\r\n                      <p>Comment:</p>\r\n                      <div className=\"container-6\">\r\n                      <InputGroup className=\"mb-3\">\r\n        {/* <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text> */}\r\n        <Form.Control\r\n          placeholder=\"Comment\"\r\n          onChange={(e) => handlescomment(e)}\r\n          aria-label=\"Username\"\r\n          aria-describedby=\"basic-addon1\"\r\n        />\r\n      </InputGroup>\r\n                      </div>\r\n                      </div>\r\n\r\n                      <div className=\"line-b-select-7\">\r\n                      <p className=\"\">Status:</p>\r\n                      <div className=\"container-7\">\r\n                      <Select\r\n                        onChange={(label) => handlestatus(label)}\r\n                        value={complaintdata.label}\r\n                        options={[\r\n                          ...complaintdata.map((ele) => {\r\n                           \r\n                             return {\r\n                               value: ele.StatusKey,\r\n                               label: ele.StatusValue,\r\n                             };\r\n                           }),\r\n                        ]}\r\n                      />\r\n                      </div>\r\n                      </div>\r\n\r\n                      \r\n                      \r\n                  \r\n                    <button className=\"classbutton\"\r\n                      onClick={(e) => {\r\n                        SaveAllData()\r\n                      }}\r\n                    >\r\n                      Save\r\n                    </button>\r\n\r\n                   \r\n\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n              <Table bordered className=\"mg-b-0\">\r\n               \r\n                <thead>\r\n                  <tr>\r\n                    <th>Complaint Id</th>\r\n                    <th>Line</th>\r\n                     <th>Tag</th>\r\n                    <th>Status</th>\r\n                    <th>Complaint Date</th>\r\n                   \r\n                    \r\n                    \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                {complaint.map((item) => (\r\n                <tr key={item._id}>\r\n              <td>{item.ComplaintID}</td> \r\n              <td>{item.Line}</td>\r\n              <td>{item.Tag}</td>\r\n              <td>{item.Status}</td>\r\n              <td>{moment(item.ComplaintDate).format('YYYY-MM-DD HH:mm:ss')}</td>\r\n         </tr>\r\n          ))}\r\n                \r\n                \r\n                \r\n                \r\n                 \r\n                 \r\n                 \r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n                        \r\n                    </div>\r\n\r\n                 </div>\r\n                 \r\n\r\n                  \r\n                </div>\r\n                {/* card-body */}\r\n              </div>\r\n    </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default BookComplaint"],"sourceRoot":""}